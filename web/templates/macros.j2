{% macro tooltip_attributes(tooltip_type, tooltip_text, tooltip_placement) %}
    data-bs-toggle="tooltip"
    data-bs-placement="{{ tooltip_placement or 'top' }}"
    data-bs-html="true"
    data-bs-custom-class="{% if tooltip_type == 'error' %}papi-web-tooltip-error{% elif tooltip_type == 'warning' %}papi-web-tooltip-warning{% else %}papi-web-tooltip-info{% endif %}"
    data-bs-title="<i class='{% if tooltip_type == 'error' %}bi-exclamation-triangle-fill{% elif tooltip_type == 'warning' %}bi-exclamation-triangle{% else %}bi-info-circle-fill{% endif %}'></i> {{ tooltip_text }}"
{% endmacro %}

{% macro visibility_icon(object_type, public, tooltip_public_text, tooltip_private_text, class) %}
    <!-- visibility_icon() -->
    {% if public %}
        {% if object_type == 'event' %}
            {% set _tooltip_text=tooltip_public_text or 'Cet évènement est public (par défaut, les écrans sont visibles des utilisateur·ices).' %}
        {% elif object_type == 'screen' %}
            {% set _tooltip_text=tooltip_public_text or 'Cet écran est public (visible des utilisateur·ices).' %}
        {% elif object_type == 'family' %}
            {% set _tooltip_text=tooltip_public_text or 'Cette famille d\'écrans est publique (visible des utilisateur·ices).' %}
        {% elif object_type == 'rotator' %}
            {% set _tooltip_text=tooltip_public_text or 'Cet écran rotatif est public (visible des utilisateur·ices).' %}
        {% else %}
            {% set _tooltip_text=tooltip_public_text or '???' %}
        {% endif %}
        {% set _icon_class='bi-unlock-fill text-success' %}
    {% else %}
        {% if object_type == 'event' %}
            {% set _tooltip_text=tooltip_private_text or 'Cet évènement est privé (par défaut, les écrans ne sont pas visibles des utilisateur·ices).' %}
        {% elif object_type == 'screen' %}
            {% set _tooltip_text=tooltip_private_text or 'Cet écran est privé (non visible des utilisateur·ices).' %}
        {% elif object_type == 'family' %}
            {% set _tooltip_text=tooltip_private_text or 'Cette famille d\'écrans est privée (non visible des utilisateur·ices).' %}
        {% elif object_type == 'rotator' %}
            {% set _tooltip_text=tooltip_private_text or 'Cet écran rotatif est privé (non visible des utilisateur·ices).' %}
        {% else %}
            {% set _tooltip_text=tooltip_private_text or '???' %}
        {% endif %}
        {% set _icon_class='bi-lock-fill text-danger' %}
    {% endif %}
    <span
            class="fw-bold {{ class }}"
            {{ tooltip_attributes('info', _tooltip_text, tooltip_placement or 'top') }}
        >
        <i class="{{ _icon_class }}"></i>
    </span>
{% endmacro %}

{% macro event_visibility_icon(event, class) %}
    <!-- event_visibility_icon() -->
    {{ visibility_icon('event', event.public, '', '', class) }}
{% endmacro %}

{% macro screen_visibility_icon(screen, class) %}
    <!-- screen_visibility_icon() -->
    {{ visibility_icon('screen', screen.public, '', '', class) }}
{% endmacro %}

{% macro family_visibility_icon(family, class) %}
    <!-- family_visibility_icon() -->
    {{ visibility_icon('family', family.public, '', '', class) }}
{% endmacro %}

{% macro rotator_visibility_icon(rotator, class) %}
    <!-- rotator_visibility_icon() -->
    {{ visibility_icon('rotator', rotator.public, '', '', class) }}
{% endmacro %}

{% macro tournament_status_icon(tournament, class) %}
    <!-- tournament_status_icon() -->
    {% if not tournament.rounds %}
        {% set _icon_class='bi-exclamation-triangle-fill text-danger' %}
        {% set _tooltip_text='' %}
    {% elif not tournament.current_round %}
        {% set _icon_class='bi-pause-fill' %}
        {% set _tooltip_text='Le tournoi n\'est pas commencé.' %}
    {% elif tournament.playing %}
        {% set _icon_class='bi-caret-right-square-fill' %}
        {% set _tooltip_text='Le tournoi est en cours.' %}
    {% else %}
        {% set _icon_class='bi-check-circle-fill text-success' %}
        {% set _tooltip_text='Le tournoi est terminé.' %}
    {% endif %}
    <span
            class="fw-bold {{ class }}"
            {% if _tooltip_text %}{{ tooltip_attributes('info', _tooltip_text, 'top') }}{% endif %}
        >
        <i class="{{ _icon_class }}"></i>
    </span>
{% endmacro %}

{% macro screen_type_icon(screen_type, tooltip) %}
    <!-- screen_type_icon() -->
    {% if screen_type == 'boards' %}
        {% set _icon_class='bi-card-list' %}
        {% set _tooltip_text='Les écrans d\'affichage des échiquiers présentent les appariements des joueur·euses par ordre croissant des échiquiers.' %}
    {% elif screen_type == 'input' %}
        {% set _icon_class='bi-pencil-fill' %}
        {% set _tooltip_text='Les écrans de saisie des résultats présentent les appariements des joueur·euses par ordre croissant des échiquiers et permet l\'entrée des résultats par les joueur·euses ou les arbitres.' %}
    {% elif screen_type == 'players' %}
        {% set _icon_class='bi-people-fill' %}
        {% set _tooltip_text='Les écrans d\'affichage des joueur·euses présentent les appariements des joueur·euses par ordre alphabétique.' %}
    {% elif screen_type == 'results' %}
        {% set _icon_class='bi-trophy-fill' %}
        {% set _tooltip_text='Les écrans de résultats affichent les derniers résultats saisis par ordre anti-chronologique (le plus récent d\'abord).' %}
    {% elif screen_type == 'image' %}
        {% set _icon_class='bi-image' %}
        {% set _tooltip_text='Les écrans d\'image affichent une image du serveur.' %}
    {% else %}
        {% set _icon_class='bi-question' %}
        {% set _tooltip_text='' %}
    {% endif %}
    <span
            class="fw-bold"
            {% if tooltip and _tooltip_text %}{{ tooltip_attributes('info', _tooltip_text, 'top') }}{% endif %}
        >
        <i class="{{ _icon_class }}"></i>
    </span>
{% endmacro %}

{% macro rotator_icon() %}
    <!-- rotator_icon() -->
    <span
            class="fw-bold"
            {{ tooltip_attributes('info', 'Les écrans rotatifs permettent de faire défiler automatiquement plusieurs écrans.', 'top') }}
        >
        <i class="bi-repeat"></i>
    </span>
{% endmacro %}

{% macro modal_script() %}
    <!-- modal_script() -->
    <script>
        {# manually remove the modal backdrop when reloading .content div (too many modal-backdrop divs are created by Bootstrap when opening modals) #}
        $(document).ready(function(){
            $('body .modal-backdrop').remove();
        });
        $('body').css('padding-right', '0');
    </script>
{% endmacro %}

{% macro tooltip_script() %}
    <!-- tooltip_script() -->
    <script>
        {# manually remove the tooltips when reloading #admin-content (tooltip elements are created by Bootstrap when tooltips are shown but sometimes not removed) #}
        $(document).ready(function(){
            $('body .tooltip').remove();
            $('body .tooltip-inner').remove();
            $('body .tooltip-arrow').remove();
        });
        {# Enable Bootstrap tooltips cf https://getbootstrap.com/docs/5.3/components/tooltips/ #}
        tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
        tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
    </script>
{% endmacro %}

{% macro background_script(background_info) %}
    <!-- background_script() -->
    <script>
        var background_info = {{ background_info | tojson }};
        var background_fingerprint = btoa(JSON.stringify(background_info));
        var body_background_fingerprint = $('body').attr('background-fingerprint');
        if (body_background_fingerprint != background_fingerprint) {
            $.ajax({
                url: '/background?color={{ background_info.color | urlencode }}&image={{ background_info.image | replace("/", "%2f") }}',
                type: 'GET',
                success: function (data) {
                    $('body').css('background-image', data['url']);
                    $('body').css('background-color', data['color']);
                    $('body').attr('background-fingerprint', background_fingerprint);
                },
                error: function (jqXHR, exception) {
                    console.log('Changing background failed:'
                        + ' status_code=' + jqXHR.status +
                        ', exception=' + exception,
                        ', response=' + jqXHR.responseText
                    );
                },
            });
        }
    </script>
{% endmacro %}

{% macro copyright_script(show) %}
    <!-- copyright_script() -->
    <script>
        {# this macro allows us to show copyright on all pages but image screens #}
        $('#copyright').css('display', '{{ "block" if show else "none" }}');
    </script>
{% endmacro %}
